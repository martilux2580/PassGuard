<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContentRichTextbox.Text" xml:space="preserve">
    <value>In this panel your saved Colour Configs will be shown. This panel is composed of a table with eight columns (buttons) that show the saved data of each of your configs, a Search Textbox with two associated buttons to Reset and Search as well as the Help button to get more info about how this part of the program works, and six buttons at the right side of the form where you can Add, Edit, Delete, Import data from JSON file, Export as PDF or as a JSON file and Send Changes done to the actual configuration.

If you click in any of the column headers (except Viewer, ChosenConfig and Delete Row column headers), you can select to order your configs by that column you´ve clicked in Normal Order (just as they were added), Ascending Order (from A-Z) or Descending Order (from Z-A). If you are ordering by Favourite Column alphabetically ascending or descending the configs marked as favourite will be ordered on top always and in the order selected. Initially everything is ordered in Normal Order. The table cannot be ordered by two or more columns simultaneously. 

In case of the ChosenConfig checkbox, there must only be one selected config. When selecting a config, a pop-up window will show up asking whether you want the selected config to be used in future executions. If the answer is yes, the colour will be used in this and future executions of the program, if not the colour will be used in this execution but when the program restarts it will use the saved config for future executions.

Rows composed of buttons with your config data will be shown in the table. If any of those buttons is clicked, the whole text data will be copied to your clipboard. All data is stored in the buttons, but because of space issues it may not be shown completely, this could be the case of the Name column.

The DeleteRow column makes it easy for the user to delete just that config. A pop-up confirmation window will be displayed before deleting the element. Deleted colour config cannot be recovered.

In order to prevent too light or dark colours that may prevent the user from adequately interacting with the app, the RGB values introduced must have a Lightness value (HSL color scheme) of between 20% and 90% both included. This Lightness is basically calculated by adding the maximum and minimum value of the three RGBs, dividing the result by 2, then dividing the result this time by 255 and then multiplying the result by 100. For more information on this topic, copy the following Wikipedia link in your favourite web browser --&gt; https://en.wikipedia.org/wiki/HSL_and_HSV

Five buttons at the right side of the form will be displayed: 
	• Add: Adds a config to the table. Name and RGB values cannot be blank, and the new Name cannot be already registered in your already saved configs. 
	• Edit: Edits a config from your table. In the drop-down list you can select the Name of the config you want to edit. Any field of the config can be modified, but the new Name cannot be already registered in your already saved configs (you can check all the registered names in the drop-down list).
	• Delete: Deletes a config from the saved configs, or delete all the configs from your saved configs. In the drop-down list you can select the Name of the config you want to delete, then click on the button 'Delete Selected Element' and the data of that selected password will be deleted. When deleting all the colour configs, the program will automatically add the Default colour to the table.
		o If the checkbox is Enabled, you can click in the button 'Delete All Elements' and all the elements of your saved configs will be deleted.
		o Any deleted element cannot be recovered. Before deleting an element or all the elements, a pop-up window asking for confirmation of the action will be shown.
	• Import Data: Imports all the configs from a saved JSON file of configs into Passguard. This action will remove all the previously saved configurations and substitute them with the import ones, a pop-up window informing of this will be shown previously to the selection of the JSON file.
	• Export as PDF: Exports all the data from the current saved configs into either PDF or JSON file format. The file will be stored in your My Documents folder in Windows OS. This action could take some minutes depending on the amount of data to export.
	• Help: Displays this window with information about how to manage your outline colours configs.

At the bottom part of the form there are 6 Numeric Up Down (NUD) laid on a 3x2 setup, the 3 on top represent the RGB values that will be used in the next execution of the program (once program restarts), the 3 on bottom instead represent the RGB values that will be used in the current execution once changes are sent.

						   Have a good day :)</value>
  </data>
</root>